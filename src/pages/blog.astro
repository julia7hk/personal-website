---
import Layout from '../layouts/Layout.astro';

// Get all markdown files from the blog directory
const allPosts = await Astro.glob('./blog/*.md');

// Transform posts to extract frontmatter and create blog post data
const blogPosts = allPosts.map(post => {
	// Extract just the filename without extension for the slug
	const slug = post.file.split('/').pop()?.replace('.md', '') || '';
	return {
		url: `/blog/${slug}`,
		title: post.frontmatter.title,
		description: post.frontmatter.description || '',
		date: post.frontmatter.date,
		tags: post.frontmatter.tags || []
	};
}).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
---

<Layout title="Blog - Julia Kang" description="Documentation of little projects or learning I do.">
	<section class="blog-hero">
		<div class="container">
			<h1 class="page-title">Blog</h1>
			<p class="page-subtitle">
				Documentation of little projects or learning i do.
			</p>
		</div>
	</section>

	<section class="blog-content">
		<div class="container">
			<div class="blog-grid">
				{blogPosts.map((post) => {
					// Parse date as local timezone to prevent day-off errors
					const [year, month, day] = post.date.split('-').map(Number);
					const localDate = new Date(year, month - 1, day);
					return (
					<a href={post.url} class="blog-card">
						<div class="blog-card-content">
							<div class="blog-meta">
								<time class="blog-date">{localDate.toLocaleDateString('en-US', {
									year: 'numeric',
									month: 'long',
									day: 'numeric'
								})}</time>
							</div>

							<h2 class="blog-title">
								{post.title}
							</h2>

							<p class="blog-excerpt">{post.description}</p>

							{post.tags && post.tags.length > 0 && (
								<div class="blog-tags">
									{post.tags.map((tag) => (
										<span class="blog-tag">{tag}</span>
									))}
								</div>
							)}
						</div>
					</a>
				)})}
			</div>
		</div>
	</section>
</Layout>

<style>
	.blog-hero {
		padding: 3rem 0 4rem;
		background: #fafaf8;
		border-bottom: 1px solid #e4e4e4;
	}

	.container {
		max-width: 900px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.page-title {
		font-size: 2rem;
		font-weight: 600;
		color: #2a2a2a;
		margin-bottom: 1rem;
		letter-spacing: -0.02em;
	}

	.page-subtitle {
		font-size: 0.95rem;
		color: #6a6a6a;
		max-width: 700px;
		line-height: 1.7;
	}

	.blog-content {
		padding: 3rem 0 4rem;
		background: #fafaf8;
	}

	.blog-grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: 2rem;
		max-width: 700px;
		margin: 0 auto;
	}

	.blog-card {
		background: transparent;
		border: 1px solid #e4e4e4;
		border-left: 3px solid #2a2a2a;
		border-radius: 8px;
		transition: border-color 0.2s ease;
		text-decoration: none;
		display: block;
		color: inherit;
	}

	.blog-card:hover {
		border-left-color: #6a6a6a;
	}

	.blog-card-content {
		padding: 1.5rem;
	}

	.blog-meta {
		display: flex;
		margin-bottom: 1rem;
		font-size: 0.85rem;
		color: #6a6a6a;
	}

	.blog-date {
		font-weight: 500;
	}

	.blog-title {
		font-size: 1.25rem;
		font-weight: 600;
		margin-bottom: 0.75rem;
		line-height: 1.4;
		color: #2a2a2a;
		letter-spacing: -0.01em;
	}

	.blog-excerpt {
		color: #4a4a4a;
		line-height: 1.7;
		margin-bottom: 1rem;
		font-size: 0.9rem;
	}

	.blog-tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.blog-tag {
		background: transparent;
		color: #6a6a6a;
		padding: 0.25rem 0.6rem;
		border: 1px solid #d4d4d4;
		border-radius: 4px;
		font-size: 0.8rem;
		font-weight: 400;
	}

	@media (max-width: 768px) {
		.page-title {
			font-size: 1.75rem;
		}

		.blog-card-content {
			padding: 1.25rem;
		}

		.blog-meta {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}

		.container {
			padding: 0 1rem;
		}
	}
</style>